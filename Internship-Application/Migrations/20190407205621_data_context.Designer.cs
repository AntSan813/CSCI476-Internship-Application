// <auto-generated />
using System;
using Internship_Application.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Internship_Application.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190407205621_data_context")]
    partial class data_context
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Internship_Application.Models.Companies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyLocation")
                        .IsRequired()
                        .HasColumnName("company_location")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnName("company_name")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Internship_Application.Models.Forms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answers")
                        .IsRequired()
                        .HasColumnName("answers")
                        .IsUnicode(false);

                    b.Property<int?>("CompanyId")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EmployerEmail")
                        .HasColumnName("employer_email")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<string>("FacultyEmail")
                        .HasColumnName("faculty_email")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<int?>("Paid")
                        .HasColumnName("paid");

                    b.Property<int>("StatusCodeId")
                        .HasColumnName("status_code_id");

                    b.Property<string>("StudentEmail")
                        .IsRequired()
                        .HasColumnName("student_email")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<string>("StudentName")
                        .HasColumnName("student_name")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<int>("TemplateId")
                        .HasColumnName("template_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("WuId")
                        .HasColumnName("wu_id")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Internship_Application.Models.StatusCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnName("details")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnName("status_code")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("StatusCodes");
                });

            modelBuilder.Entity("Internship_Application.Models.Templates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Disclaimer")
                        .IsRequired()
                        .HasColumnName("disclaimer")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnName("display_name")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsRetired")
                        .HasColumnName("is_retired");

                    b.Property<string>("Questions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("questions")
                        .HasDefaultValueSql("('[{\"Prompt\":\"\", \"InputType\": \"\", \"HelperText\": \"\", \"Order\": \"\", \"Role\": \"\", \"Required\": \"\", \"ProcessQuestion\": \"\", \"DateSigned\": \"\", \"Options\": \"[]\"}]')")
                        .IsUnicode(false);

                    b.Property<DateTime?>("RetiredAt")
                        .HasColumnName("retired_at")
                        .HasColumnType("datetime");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnName("template_name")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });
#pragma warning restore 612, 618
        }
    }
}
