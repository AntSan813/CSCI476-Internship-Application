// <auto-generated />
using System;
using Internship_Application.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Internship_Application.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    [Migration("20190329000017_DataContextMigration")]
    partial class DataContextMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Internship_Application.Models.Forms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdministratorQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("administrator_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployerQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employer_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("FacultyQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("faculty_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("StudentQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("student_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("StudentServicesQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("student_services_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int>("TemplateId")
                        .HasColumnName("template_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("WuId")
                        .IsRequired()
                        .HasColumnName("wu_id")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Internship_Application.Models.Templates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdministratorQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("administrator_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("deleted_at")
                        .HasColumnType("datetime");

                    b.Property<string>("Disclaimer")
                        .IsRequired()
                        .HasColumnName("disclaimer")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("EmployerQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employer_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("FacultyQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("faculty_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("FormTitle")
                        .IsRequired()
                        .HasColumnName("form_title")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive")
                        .HasColumnName("is_active");

                    b.Property<bool?>("IsModifiable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_modifiable")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("StudentQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("student_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("StudentServicesQuestions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("student_services_questions")
                        .HasDefaultValueSql("('{}')")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnName("template_name")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });
#pragma warning restore 612, 618
        }
    }
}
